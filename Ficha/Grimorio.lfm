<?xml version="1.0" encoding="UTF-8"?>
<form name="Grimorio" align="client" theme="dark" margins="{top=1}">
    <import file="Functions.lfm"/>
    <import file="Functions_Roll.lfm"/>
    <import file="Functions_Edit.lfm"/>
    <script>
        function searchList(addMode)
            magics = NDB.getChildNodes(sheet.magics)
            magicsInv = NDB.getChildNodes(sheet.magicsInv)
            btns = {self.btn1, self.btn2, self.btn3, self.btn4, self.btn5}
            -- Nenhun Signo selecionado
            if btns[1].src == "" then
                -- Passa todos as magias da lista invisivel para o grimorio
                for i=1, #magicsInv, 1 do
                    nodo = self.grimorio:append()
                    NDB.copy(nodo, magicsInv[i])
                    if nodo.vis == "false" then
                        NDB.setPermission(nodo, "group", "jogadores", "read", "deny")
                        NDB.setPermission(nodo, "group", "espectadores", "read", "deny")
                    end
                    NDB.deleteNode(magicsInv[i])
                end
            else
                sequencia = {}
                -- Criação da sequencia
                for i=1, #btns, 1 do
                    signo = getSigno(btns[i].src)
                    if signo ~= nil then 
                        table.insert(sequencia, signo)
                    end
                end
                -- Ordenar e juntar
                table.sort(sequencia)
                sequencia = table.concat(sequencia, " ")
                -- Limitar lista de acordo com os signos selecionados - Grimório para Lista invisivel
                if addMode then
                    for i=1, #magics, 1 do
                        if string.find(magics[i].sequencia, sequencia) == nil then
                            nodo = self.grimorioInv:append()
                            NDB.setPermission(magics[i], "group", "jogadores", "read", nil)
                            NDB.setPermission(magics[i], "group", "espectadores", "read", nil)
                            NDB.copy(nodo, magics[i])
                            NDB.deleteNode(magics[i])
                        end
                    end
                -- Limitar lista de acordo com os signos selecionados - Lista invisivel para Grimório
                else
                    for i=1, #magicsInv, 1 do
                        if string.find(magicsInv[i].sequencia, sequencia) ~= nil then
                            nodo = self.grimorio:append()
                            NDB.copy(nodo, magicsInv[i])
                            if magicsInv[i].vis == "false" then
                                NDB.setPermission(nodo, "group", "jogadores", "read", "deny")
                                NDB.setPermission(nodo, "group", "espectadores", "read", "deny")
                            end
                            NDB.deleteNode(magicsInv[i])
                        end
                    end
                end
            end
            self.grimorio:needRepaint()
            self.grimorio:sort()
        end
        function addSig(sig)
            btns = {self.btn1, self.btn2, self.btn3, self.btn4, self.btn5}
            sequencia = {sig}
            -- É o primeiro
            if btns[1] == "" then
                btns[1].src = "/Ficha/images/signos/" .. sig .. ".png"
            else
                -- Cria sequencia
                for i=1, #btns, 1 do
                    signo = getSigno(btns[i].src)
                    if signo ~= nil then 
                        table.insert(sequencia, signo)
                    end
                end
                table.sort(sequencia)
                -- Integra imagens nos botões corretos
                if 5 >= #sequencia then
                    for i=1, #sequencia, 1 do
                        btns[i].src = "/Ficha/images/signos/" .. sequencia[i] .. ".png"
                    end
                end
            end
            if 6 > #sequencia then 
                searchList(true)
            end
        end
        function removeSig(btnNum)
            btns = {self.btn1, self.btn2, self.btn3, self.btn4, self.btn5}
            btns[btnNum].src = ""
            sequencia = {}
            -- Criação da sequencia
            for i=1, #btns, 1 do
                signo = getSigno(btns[i].src)
                if signo ~= nil then 
                    table.insert(sequencia, signo)
                end
            end
            table.sort(sequencia)
            -- Integra imagens nos botões corretos
            if 5 >= #sequencia then
                for i=1, 5, 1 do
                    if sequencia[i] ~= nil then
                        btns[i].src = "/Ficha/images/signos/" .. sequencia[i] .. ".png"
                    else
                        btns[i].src = ""
                    end
                end
            end
            searchList(false)
        end
        function altVigor()
            vigor = 15
            for i=1, 8, 1 do
                level = getLevel(i)
                if level >= 3 then
                    vigor = vigor + 1
                end
                if level >= 5 then
                    vigor = vigor + 1
                end
            end
            sheet.vigorMax = vigor
        end
        function altLevel(sig, text)
            if     sig == 1 then sheet.level1 = text
            elseif sig == 2 then sheet.level2 = text
            elseif sig == 3 then sheet.level3 = text
            elseif sig == 4 then sheet.level4 = text
            elseif sig == 5 then sheet.level5 = text
            elseif sig == 6 then sheet.level6 = text
            elseif sig == 7 then sheet.level7 = text
            elseif sig == 8 then sheet.level8 = text
            else
                showMessage("Error")
            end
            altVigor()
        end
        SIZE = 1650
        function hasSize()
            return self.body.width > SIZE
        end
        function resizeLayout()
            if hasSize() then
                self.layout2.left = 850
                self.layout2.top = 0
                self.layout2.width = 800 + self.body.width - SIZE
            else
                self.layout2.left = 0
                self.layout2.top = 810
                self.layout2.width = 800
            end
        end
    </script>
    <template name="select_magia">
        <!--
            hints = {"Calor", "Disrupção", "Engano", "Equilíbrio", "Força", "Imaterial", "Material", "Proteção"}
            for i=1, #hints, 1 do
                h = hints[i]
                index = i
                image = tostring(i)
        -->
            <layout width="70" height="85" margins="left=5">
                <image align="top" height="60" width="60" style="proportional" hitTest="true" hint="$(h)" src="/Ficha/images/signos/$(image).png">
                    <event name="onClick">
                        sig = tonumber($(index))
                        addSig(sig)
                    </event>
                </image>
                <label align="top" height="25" field="level$(index)" horzTextAlign="center" hitTest="true" hint="Level: XP Atual/XP Upar"/>
            </layout>
        <!-- 
            end
        -->
    </template>
    <template name="magic_display">
        <flowLayout align="top" height="50" horzAlign="center">
            <!-- 
                for i=1, 5, 1 do
                    btn = "btn" .. i
                    num = i
            -->
                <rectangle align="left" width="50" height="50" margins="left=5" color="black" strokeColor="red" strokeSize="2">
                    <image width="50" height="50" style="stretch" hitTest="true" name="$(btn)">
                        <event name="onCLick">
                            btnNum = $(num)
                            removeSig(btnNum)
                        </event>
                    </image>
                </rectangle>
            <!-- 
                end
            -->
        </flowLayout>
    </template>
    <template name="button_addMagic">
        <button width="150" text="Adicionar Magia" margins="top=10">
            <event name="onClick">
                btns = {self.btn1, self.btn2, self.btn3, self.btn4, self.btn5}
                sequencia = ""
                for i=1, 5, 1 do
                    if getSigno(btns[i].src) == nil then
                        break
                    end
                    if i ~= 1 then
                        sequencia = sequencia .. " "
                    end
                    sequencia = sequencia .. getSigno(btns[i].src)
                end
                if sequencia == "" then
                    showMessage("Nenhum Signo na magia.")
                else
                    -- Verifica se sequencia ja existe
                    magics = NDB.getChildNodes(sheet.magics)
                    flag = true
                    for i=1, #magics, 1 do
                        if magics[i].sequencia == sequencia then
                            flag = false
                            break
                        end
                    end
                    if flag then
                        -- Adiciona magia
                        node = self.grimorio:append()
                        node.sequencia = sequencia
                        sequencia = split(sequencia, " ")
                        -- Adiciona imagens
                        if sequencia[1] ~= nil then
                            node.signo1 = "/Ficha/images/signos/" .. sequencia[1] .. ".png"
                        end
                        if sequencia[2] ~= nil then
                            node.signo2 = "/Ficha/images/signos/" .. sequencia[2] .. ".png"
                        end
                        if sequencia[3] ~= nil then
                            node.signo3 = "/Ficha/images/signos/" .. sequencia[3] .. ".png"
                        end
                        if sequencia[4] ~= nil then
                            node.signo4 = "/Ficha/images/signos/" .. sequencia[4] .. ".png"
                        end
                        if sequencia[5] ~= nil then
                            node.signo5 = "/Ficha/images/signos/" .. sequencia[5] .. ".png"
                        end
                        self.grimorio:sort()
                    else
                        showMessage("Mágica já escrita no Grimório.")
                    end
                end
            </event>
        </button>
    </template>
    <template name="button_Level">
        <button width="150" text="Ajustar Level de magia" margins="top=10, left=10">
            <event name="onClick">
                Dialogs.choose("Escolha o Signo.", {"1 - Calor","2 - Disrupção","3 - Engano","4 - Equilíbrio","5 - Força","6 - Imaterial","7 - Material","8 - Proteção"},
                    function(selected, selectedIndex, selectedText)
                        if selected == false then 
                            showMessage("Operação cancelada.")
                        else
                            sig = selectedIndex
                            Dialogs.choose("Escolha o Level.", {"0","1","2","3","4","5","6"},
                                function(selected2, selectedIndex2, selectedText2)
                                    if selected2 == false then 
                                        showMessage("Operação cancelada.")
                                    else
                                        level = selectedIndex2
                                        qnts = {4, 3, 5, 7, 9, 11, 100}
                                        choises = {}
                                        for i=0, qnts[level]-1, 1 do
                                            table.insert(choises, "" .. i)
                                        end
                                        Dialogs.choose("Escolha a quantidade de XP.", choises,
                                            function(selected3, selectedIndex3, selectedText3)
                                                if selected3 == false then 
                                                    showMessage("Operação cancelada.")
                                                else
                                                    text = selectedText2 .. ": " .. selectedText3 .. "/" .. qnts[level]
                                                    altLevel(sig, text)
                                                end
                                            end
                                        )
                                    end
                                end
                            )
                        end
                    end
                )
            </event>
        </button>
    </template>
    <scrollBox align="client" margins="{left=5, top=5, bottom=5, right=5}" name="body">
        <edit field="admPermission" visible="false" width="0" height="0"/>
        <layout left="0" top="0" width="800" height="800" margins="{left = 5, right = 5, top = 5, bottom = 5}" name="layout1">
            <!-- Escudo -->
            <flowLayout align="top" width="150" horzAlign="center" autoHeight="true">
                <layout width="150" height="150">
                    <imageCheckBox align="top" name="escudoAp" width="100" height="100" field="selected"
                        checkedImage="images/ShieldOn.png" uncheckedImage="images/ShieldOff.png" autoChange="false">
                        <event name="onClick">
                            if (selected == "" or selected == nil) then
                                selected = self.grimorio.selectedNode.sequencia
                                if (selected == nil) then
                                    showMessage("Escudo não encontrado.")
                                else
                                    self.escudoAp.checked = true
                                    showMessage("Escudo aplicado.")
                                end
                            else
                                magics = NDB.getChildNodes(sheet.magics)
                                magicsInv = NDB.getChildNodes(sheet.magicsInv)
                                selectedNode = nil
                                for i=1, #magics, 1 do
                                    if magics[i].sequencia == selected then
                                        selectedNode = magics[i]
                                        break
                                    end
                                end
                                if selectedNode == nil then
                                    for i=1, #magicsInv, 1 do
                                        if magicsInv[i].sequencia == selected then
                                            selectedNode = magicsInv[i]
                                            break
                                        end
                                    end
                                end
                                self.magicDesc.node = selectedNode
                                showMessage("Escudo selecionado.")
                            end
                        </event>
                    </imageCheckBox>
                    <button align="top" text="Remover escudo" width="150">
                        <event name="onClick">
                            selected = ""
                            self.escudoAp.checked = false
                            showMessage("Escudo removido.")
                        </event>
                    </button>
                </layout>
            </flowLayout>
            <!-- vigor/resetarvigor -->
            <flowLayout align="top" height="25" margins="{left = 5, right = 5, top = 5, bottom = 5}" horzAlign="center">
                <progressBar color="yellow" width="600" fieldMax="vigorMax" field="vigor" hitTest="true">
                    <event name="onClick">
                        showMessage("Vigor: " .. sheet.vigor .. "/" .. sheet.vigorMax)
                    </event>
                </progressBar>
                <button text="Restaurar Vigor" width="100" margins="left=10">
                    <event name="onClick">
                        Dialogs.confirmOkCancel("Deseja resetar o vigor(".. sheet.vigorMax ..")?",
                        function (confirmado)
                            if confirmado then
                                sheet.vigor = sheet.vigorMax
                            end
                        end)
                    </event>
                </button>
            </flowLayout>
            <!-- magia -->
            <layout align="top" height="300" margins="{left = 5, right = 5, top = 5, bottom = 5}">
                <flowLayout align="top" width="850" height="85" horzAlign="center">
                    <select_magia/>
                </flowLayout>
                <layout align="top" width="850" height="340" margins="top=10">
                    <magic_display/>
                    <flowLayout align="top" width="850" height="35" margins="{left = 5, right = 5, top = 5, bottom = 5}" horzAlign="center" name="adminTab">
                        <button_addMagic/>
                        <button_Level/>
                    </flowLayout>
                </layout>
            </layout>
            <!-- desc -->
            <layout align="top" height="300" margins="{left = 5, right = 5, top = 5, bottom = 5}">
                <dataScopeBox name="magicDesc" align="client">
                    <rectangle align="top" color="black" xradius="10" yradius="10" height="290" padding="{top=5, left=5, right=5, bottom=5}">
                        <layout align="client">
                            <layout align="top" height="60">
                                <layout align="left" width="600" height="50">
                                    <layout align="top" width="90" height="25" margins="top = 5">
                                        <label align="left" text="Dano" margins="left = 5"/>
                                        <edit align="left" width="50" field="dano" type="number" min="0" max="5"/>
                                    </layout>
                                    <layout align="top" width="90" height="25" margins="top = 5">
                                        <label align="left" text="Unidade" margins="left = 5"/>
                                        <edit align="left" width="300" field="unidades" hint="Nome=Valor,Nome=Valor ou Valor,Valor"/>
                                    </layout>
                                </layout>
                                <layout align="right" width="200" height="60">
                                    <layout align="top" width="90" height="25" margins="top = 5">
                                        <button align="left" text="Rolar" width="60" margins="left=10">
                                            <event name="onClick">
                                                node = self.grimorio.selectedNode
                                                if node ~= nil then
                                                    trySpell()
                                                end
                                            </event>
                                        </button>
                                        <checkBox align="left" field="modoSecreto" text="Modo Secreto" margins="left = 5"/>
                                    </layout>
                                    <layout align="top" width="90" height="25" margins="top = 5">
                                        <button align="left" text="Revelar Valores" width="180" margins="left=10">
                                            <event name="onClick">
                                                node = self.grimorio.selectedNode
                                                if node ~= nil then
                                                    if node.rolagem ~= nil then
                                                        revealResult(node.rolagem)
                                                        node.rolagem = nil
                                                    else
                                                        showMessage("Nenhuma magia preparada.")
                                                    end
                                                end
                                            </event>
                                        </button>
                                    </layout>
                                </layout>
                            </layout>
                            <label align="bottom" text="Descrição" margins="left = 5"/>
                            <textEditor align="bottom" height="190" field="desc" margins="top = 5"/>
                        </layout>
                    </rectangle>
                </dataScopeBox>
            </layout>
        </layout>
        <!-- Grimorio -->
        <layout width="900" height="800" margins="{left = 5, right = 5, top = 5, bottom = 5}" name="layout2">
            <!-- Grimorio head -->
            <layout align="top" height="25">
                <label align="left" text="Grimório" width="100" height="25" fontStyle="bold"/>
                <button align="left" left="10" text="Copiar Grimório" width="150" height="25" margins="left = 10">
                    <event name="onCLick">
                        copyAll()
                    </event>
                </button>
                <button align="left" left="10" text="Colar no Grimório" width="150" height="25" margins="left = 10">
                    <event name="onCLick">
                        pasteAll()
                        self.grimorio:sort()
                    </event>
                </button>
            </layout>
            <!-- lista -->
            <scrollBox align="top" height="755" margins="{top = 10}">
                <recordList name="grimorio" field="magics" templateForm="ItemGrimorio" align="client" selectable="true">
                    <event name="onSelect">
                        node = self.grimorio.selectedNode
                        self.magicDesc.node = node
                    </event>
                    <event name="onCompare">
                        a = split(nodeA.sequencia or "", " ")
                        b = split(nodeB.sequencia or "", " ")
                        if #a > #b then
                            return 1
                        elseif #b > #a then
                            return -1
                        else
                            for i=1, #a, 1 do
                                if a[i] == "" or b[i] == "" then
                                    return 0
                                end
                                if tonumber(a[i]) > tonumber(b[i]) then
                                    return 1
                                elseif tonumber(b[i]) > tonumber(a[i]) then
                                    return -1
                                end
                            end
                        end
                    </event>
                </recordList>
            </scrollBox>
            <!-- Lista invisivel -->
            <recordList name="grimorioInv" field="magicsInv" templateForm="ItemGrimorio" width="0" height="0" visible="false"/>
        </layout>
        <event name="onResize">
            resizeLayout()
        </event>
    </scrollBox>
</form>