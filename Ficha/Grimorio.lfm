<?xml version="1.0" encoding="UTF-8"?>
<form name="Grimorio" align="client" theme="dark" margins="{top=1}">
    <import file="Functions.lfm"/>
    <import file="Functions_Roll.lfm"/>
    <import file="Functions_Edit.lfm"/>
    <script>
        function orderSig(a, b)
            return icons[b] > icons[a]
        end
        function getBtn(num)
            if num == 1 then return sheet.btn1 or ""
            elseif num == 2 then return sheet.btn2 or ""
            elseif num == 3 then return sheet.btn3 or ""
            elseif num == 4 then return sheet.btn4 or ""
            elseif num == 5 then return sheet.btn5 or ""
            else return ""
            end
        end
        function setBtn(num, text)
            if num == 1 then sheet.btn1 = text
            elseif num == 2 then sheet.btn2 = text
            elseif num == 3 then sheet.btn3 = text
            elseif num == 4 then sheet.btn4 = text
            elseif num == 5 then sheet.btn5 = text
            else return ""
            end
        end
        function createSequencia()
            sequencia = {}
            -- CriaÃ§Ã£o da sequencia
            for i=1, 5, 1 do
                if getBtn(i) == "" then
                    break
                else
                    table.insert(sequencia, getBtn(i))
                end
            end
            return sequencia
        end
        function searchList(addMode)
            magics = NDB.getChildNodes(sheet.magics)
            magicsInv = NDB.getChildNodes(sheet.magicsInv)
            -- Nenhun Signo selecionado
            if getBtn(1) == "" then
                -- Passa todos as magias da lista invisivel para o grimorio
                for i=1, #magicsInv, 1 do
                    nodo = self.grimorio:append()
                    NDB.copy(nodo, magicsInv[i])
                    if nodo.vis == "false" then
                        NDB.setPermission(nodo, "group", "jogadores", "read", "deny")
                        NDB.setPermission(nodo, "group", "espectadores", "read", "deny")
                    end
                    NDB.deleteNode(magicsInv[i])
                end
            else
                sequencia = createSequencia()
                -- Ordenar e juntar
                table.sort(sequencia, orderSig)
                sequencia = table.concat(sequencia, "")
                -- Limitar lista de acordo com os signos selecionados - GrimÃ³rio para Lista invisivel
                if addMode then
                    for i=1, #magics, 1 do
                        if string.find(magics[i].sequencia, sequencia) == nil then
                            nodo = self.grimorioInv:append()
                            NDB.setPermission(magics[i], "group", "jogadores", "read", nil)
                            NDB.setPermission(magics[i], "group", "espectadores", "read", nil)
                            NDB.copy(nodo, magics[i])
                            NDB.deleteNode(magics[i])
                        end
                    end
                -- Limitar lista de acordo com os signos selecionados - Lista invisivel para GrimÃ³rio
                else
                    for i=1, #magicsInv, 1 do
                        if string.find(magicsInv[i].sequencia, sequencia) ~= nil then
                            nodo = self.grimorio:append()
                            NDB.copy(nodo, magicsInv[i])
                            if magicsInv[i].vis == "false" then
                                NDB.setPermission(nodo, "group", "jogadores", "read", "deny")
                                NDB.setPermission(nodo, "group", "espectadores", "read", "deny")
                            end
                            NDB.deleteNode(magicsInv[i])
                        end
                    end
                end
            end
            self.grimorio:needRepaint()
            self.grimorio:sort()
        end
        function addSig(sig)
            -- Ã‰ o primeiro
            if getBtn(1) == "" then
                setBtn(1, sig)
                searchList(true)
            else
                sequencia = createSequencia()
                table.insert(sequencia, sig)
                table.sort(sequencia, orderSig)
                -- Integra imagens nos botÃµes corretos
                if 5 >= #sequencia then
                    for i=1, #sequencia, 1 do
                        setBtn(i, sequencia[i])
                    end
                    searchList(true)
                end
            end
        end
        function removeSig(btnNum)
            setBtn(btnNum, "")
            sequencia = {}
            -- CriaÃ§Ã£o da sequencia
            for i=1, 5, 1 do
                if getBtn(i) ~= "" then
                    table.insert(sequencia, getBtn(i))
                end
            end
            table.sort(sequencia, orderSig)
            -- Integra emojis nos botÃµes corretos
            if 5 >= #sequencia then
                for i=1, 5, 1 do
                    setBtn(i, sequencia[i])
                end
            end
            searchList(false)
        end
        function altVigor()
            vigor = 15
            for i=1, 8, 1 do
                level = getLevel(i)
                if level >= 3 then
                    vigor = vigor + 1
                end
                if level >= 5 then
                    vigor = vigor + 1
                end
            end
            sheet.vigorMax = vigor
        end
        function altLevel(sig, text)
            if     sig == 1 then sheet.level1 = text
            elseif sig == 2 then sheet.level2 = text
            elseif sig == 3 then sheet.level3 = text
            elseif sig == 4 then sheet.level4 = text
            elseif sig == 5 then sheet.level5 = text
            elseif sig == 6 then sheet.level6 = text
            elseif sig == 7 then sheet.level7 = text
            elseif sig == 8 then sheet.level8 = text
            else
                showMessage("Error")
            end
            altVigor()
        end
        function popupShow(text)
            self.popupText.text = text
            self.popupMsg:show()
        end     
    </script>
    <template name="select_magia">
        <!-- 
            icons = {"ðŸ”¥","âš¡","ðŸŽ²","ðŸŒ“","ðŸ‘Š","ðŸ’«","ðŸŽ±","â˜”"}
            hints = {"Calor", "DisrupÃ§Ã£o", "Engano", "EquilÃ­brio", "ForÃ§a", "Imaterial", "Material", "ProteÃ§Ã£o"}
            usable = false
            for i=1, #hints, 1 do
                ic = icons[i]
                h = hints[i]
                index = i
                btnAName = "btnAName" .. i
        -->
            <layout width="70" height="85" margins="left=5">
                <button align="top" text="$(ic)" height="60" hint="$(h)" fontSize="30" name="$(btnAName)">
                    <event name="onClick">
                        sig = "$(ic)"
                        addSig(sig)
                    </event>
                </button>
                <label align="top" height="25" field="level$(index)" horzTextAlign="center" hitTest="true" hint="Level: XP Atual/XP Upar"/>
            </layout>
        <!-- 
            end
        -->
    </template>
    <template name="magic_display">
        <flowLayout align="top" height="165" horzAlign="center" lineSpacing="5" margins="bottom=5">
            <flowLayout width="850" horzAlign="center">
                <display_button number="1"/>
            </flowLayout>
            <flowLineBreak/>
            <flowLayout width="850" horzAlign="center">
                <display_button number="2"/>
                <label width="35" text=""/>
                <display_button number="3"/>
            </flowLayout>
            <flowLineBreak/>
            <flowLayout width="850" horzAlign="center">
                <display_button number="4"/>
                <label width="5" text=""/>
                <display_button number="5"/>
            </flowLayout>
        </flowLayout>
    </template>
    <template name="display_button">
        <!-- 
            btn = "btn" .. number
         -->
        <button width="50" height="50" name="$(btn)" margins="left=5" fontSize="20">
            <label align="client" field="$(btn)" fontSize="30" horzTextAlign="center"/>
            <event name="onCLick">
                btnNum = $(number)
                removeSig(btnNum)
            </event>
        </button>
    </template>
    <template name="button_addMagic">
        <button width="150" text="Adicionar Magia">
            <event name="onClick">
                sequencia = ""
                for i=1, 5, 1 do
                    sequencia = sequencia .. getBtn(i)
                end
                if sequencia == "" then
                    popupShow("Nenhum Signo na magia.")
                else
                    -- Verifica se sequencia ja existe
                    magics = NDB.getChildNodes(sheet.magics)
                    flag = true
                    for i=1, #magics, 1 do
                        if magics[i].sequencia == sequencia then
                            flag = false
                            break
                        end
                    end
                    if flag then
                        -- Adiciona magia
                        node = self.grimorio:append()
                        node.sequencia = sequencia
                        self.grimorio:sort()
                        popupShow("MÃ¡gica adicionada no GrimÃ³rio.")
                    else
                        popupShow("MÃ¡gica jÃ¡ escrita no GrimÃ³rio.")
                    end
                end
            </event>
        </button>
    </template>
    <template name="button_Level">
        <button width="150" text="Ajustar Level de magia" margins="left=10">
            <event name="onClick">
                Dialogs.choose("Escolha o Signo.", {"ðŸ”¥ - Calor","âš¡ - DisrupÃ§Ã£o","ðŸŽ² - Engano","ðŸŒ“ - EquilÃ­brio","ðŸ‘Š - ForÃ§a","ðŸ’« - Imaterial","ðŸŽ± - Material","â˜” - ProteÃ§Ã£o"},
                    function(selected, selectedIndex, selectedText)
                        if selected == false then 
                            popupShow("OperaÃ§Ã£o cancelada.")
                        else
                            sig = selectedIndex
                            Dialogs.choose("Escolha o Level.", {"0","1","2","3","4","5","6"},
                                function(selected2, selectedIndex2, selectedText2)
                                    if selected2 == false then 
                                        popupShow("OperaÃ§Ã£o cancelada.")
                                    else
                                        level = selectedIndex2
                                        qnts = {4, 3, 5, 7, 9, 11, 100}
                                        choises = {}
                                        for i=0, qnts[level]-1, 1 do
                                            table.insert(choises, "" .. i)
                                        end
                                        Dialogs.choose("Escolha a quantidade de XP.", choises,
                                            function(selected3, selectedIndex3, selectedText3)
                                                if selected3 == false then 
                                                    popupShow("OperaÃ§Ã£o cancelada.")
                                                else
                                                    text = selectedText2 .. ": " .. selectedText3 .. "/" .. qnts[level]
                                                    altLevel(sig, text)
                                                end
                                            end
                                        )
                                    end
                                end
                            )
                        end
                    end
                )
            </event>
        </button>
    </template>
    <popup name="popupMsg" width="300" height="200" backOpacity="0.5">
        <label align="client" horzTextAlign="center" text="Teste" name="popupText" autoSize="true" fontSize="20"/>
    </popup>
    <edit field="admPermission" visible="false" width="0" height="0"/>
    <scrollBox align="client" margins="{left=5, top=5, bottom=5, right=5}" name="body">
        <label align="top" width="0" text=""/>
        <flowLayout align="top" orientation="horizontal" horzAlign="justify" autoHeight="true">
            <layout width="800" height="840" margins="{left = 5, right = 5, top = 5, bottom = 5}">
                <!-- Escudo -->
                <flowLayout align="top" width="150" horzAlign="center" autoHeight="true">
                    <layout width="150" height="150">
                        <imageCheckBox align="top" name="escudoAp" width="100" height="100" field="selected"
                            checkedImage="images/ShieldOn.png" uncheckedImage="images/ShieldOff.png" autoChange="false">
                            <event name="onClick">
                                if (selected == "" or selected == nil) then
                                    node = self.grimorio.selectedNode
                                    if (node == nil) then
                                        popupShow("Escudo nÃ£o encontrado.")
                                    else
                                        selected = node.sequencia
                                        self.escudoAp.checked = true
                                        popupShow("Escudo aplicado.")
                                    end
                                else
                                    magics = NDB.getChildNodes(sheet.magics)
                                    magicsInv = NDB.getChildNodes(sheet.magicsInv)
                                    selectedNode = nil
                                    for i=1, #magics, 1 do
                                        if magics[i].sequencia == selected then
                                            selectedNode = magics[i]
                                            break
                                        end
                                    end
                                    if selectedNode == nil then
                                        for i=1, #magicsInv, 1 do
                                            if magicsInv[i].sequencia == selected then
                                                selectedNode = magicsInv[i]
                                                break
                                            end
                                        end
                                    end
                                    self.magicDesc.node = selectedNode
                                    popupShow("Escudo selecionado.")
                                end
                            </event>
                        </imageCheckBox>
                        <button align="top" text="Remover escudo" width="150" name="btnEscudo">
                            <event name="onClick">
                                selected = ""
                                self.escudoAp.checked = false
                                popupShow("Escudo removido.")
                            </event>
                        </button>
                    </layout>
                </flowLayout>
                <!-- vigor/resetarvigor -->
                <flowLayout align="top" height="25" margins="{left = 5, right = 5, top = 5, bottom = 5}" horzAlign="center">
                    <progressBar color="yellow" width="600" fieldMax="vigorMax" field="vigor" hitTest="true" name="VigorBar">
                        <event name="onClick">
                            popupShow("Vigor: " .. sheet.vigor .. "/" .. sheet.vigorMax)
                        </event>
                    </progressBar>
                    <button text="Restaurar Vigor" width="100" margins="left=10" name="VigorBtn">
                        <event name="onClick">
                            Dialogs.confirmOkCancel("Deseja resetar o vigor(".. sheet.vigorMax ..")?",
                            function (confirmado)
                                if confirmado then
                                    sheet.vigor = sheet.vigorMax
                                    popupShow("Vigor restaurado.")
                                end
                            end)
                        </event>
                    </button>
                </flowLayout>
                <!-- magia -->
                <layout align="top" height="295" margins="{left = 5, right = 5, top = 5, bottom = 5}">
                    <flowLayout align="top" width="850" height="85" horzAlign="center">
                        <select_magia/>
                    </flowLayout>
                    <layout align="top" width="850" height="200" margins="top=10">
                        <magic_display/>
                        <flowLayout align="top" width="850" height="35" margins="{left = 5, right = 5, top = 5, bottom = 5}" horzAlign="center" name="adminTab">
                            <button_addMagic/>
                            <button_Level/>
                        </flowLayout>
                    </layout>
                </layout>
                <!-- desc -->
                <layout align="bottom" height="350" margins="{left = 5, right = 5, top = 5, bottom = 5}">
                    <dataScopeBox name="magicDesc" align="client">
                        <rectangle align="client" color="black" xradius="10" yradius="10" padding="{top=5, left=5, right=5, bottom=5}">
                            <layout align="top" height="135">
                                <layout align="left" width="600">
                                    <layout align="top"  height="25" margins="top = 5">
                                        <label align="left" text="Dano" margins="left = 5"/>
                                        <edit align="left" width="50" field="dano" type="number" min="0" max="5"/>
                                    </layout>
                                    <layout align="top" height="25" margins="top = 5">
                                        <label align="left" text="Unidade" margins="left = 5"/>
                                        <edit align="left" width="400" field="unidades" hint="Nome=Valor,Nome=Valor ou Valor,Valor"/>
                                    </layout>
                                    <layout align="top" height="80" margins="top = 5">
                                        <label align="left" height="55" text="Ultra Secreto" margins="left = 5"/>
                                        <textEditor align="left" width="400" height="55" field="rolagemUltraSecreta" readOnly="true"/>
                                    </layout>
                                </layout>
                                <layout align="right" width="200">
                                    <layout align="top" width="90" height="25" margins="top = 5">
                                        <button align="left" text="Rolar" width="60" margins="left=10" name="btnRolar">
                                            <event name="onClick">
                                                node = self.grimorio.selectedNode
                                                if node ~= nil then
                                                    trySpell()
                                                end
                                            </event>
                                        </button>
                                        <checkBox align="left" field="modoSecreto" text="Modo Secreto" margins="left = 5" name="cbModosecreto"/>
                                    </layout>
                                    <layout align="top" width="90" height="25" margins="top = 5">
                                        <checkBox align="left" field="modoUltraSecreto" text="Modo Ultra Secreto" margins="left = 10" name="cbModoUsecreto"/>
                                    </layout>
                                    <layout align="top" width="90" height="25" margins="top = 5">
                                        <button align="left" text="Revelar Valores" width="180" margins="left=10" name="btnRevelar">
                                            <event name="onClick">
                                                revealResult()
                                            </event>
                                        </button>
                                    </layout>
                                </layout>
                            </layout>
                            <label align="bottom" text="DescriÃ§Ã£o" margins="left = 5"/>
                            <textEditor align="bottom" height="190" field="desc" margins="top = 5"/>
                        </rectangle>
                    </dataScopeBox>
                </layout>
            </layout>
            <!-- Grimorio -->
            <flowLayout align="client" width="900" margins="{left = 5, right = 5, top = 5, bottom = 5}" autoHeight="true">
                <!-- Grimorio head -->
                <flowPart minWidth="500" maxWidth="900" height="30">
                    <label align="left" text="GrimÃ³rio" width="100" height="25" fontStyle="bold"/>
                    <button align="left" left="10" text="Copiar GrimÃ³rio" width="150" height="25" margins="left = 10">
                        <event name="onCLick">
                            copyAll()
                        </event>
                    </button>
                    <button align="left" left="10" text="Colar no GrimÃ³rio" width="150" height="25" margins="left = 10">
                        <event name="onCLick">
                            pasteAll()
                            self.grimorio:sort()
                        </event>
                    </button>
                </flowPart>
                <flowLineBreak/>
                <flowPart minWidth="500" maxWidth="900" height="810">
                    <!-- lista -->
                    <rectangle color="#505050" strokeColor="black" strokeSize="2" align="top" height="500" margins="{top = 10, right=5}">
                        <scrollBox align="client" margins="{left=5, top=5, right=5, bottom=5}">
                            <recordList name="grimorio" field="magics" templateForm="ItemGrimorio" align="client" selectable="true">
                                <event name="onSelect">
                                    node = self.grimorio.selectedNode
                                    self.magicDesc.node = node
                                </event>
                                <event name="onCompare">
                                    a = nodeA.sequencia or ""
                                    b = nodeB.sequencia or ""
                                    return sortSig(a, b)
                                </event>
                            </recordList>
                        </scrollBox>
                    </rectangle>
                    <!-- Lista invisivel -->
                    <rectangle color="#505050" strokeColor="black" strokeSize="2" align="top" height="275" margins="{top = 10, right=5}">
                        <scrollBox align="client" margins="{left=5, top=5, right=5, bottom=5}">
                            <recordList name="grimorioInv" field="magicsInv" templateForm="ItemGrimorio" align="client">
                                <event name="onSelect">
                                    node = self.grimorioInv.selectedNode
                                    self.magicDesc.node = node
                                </event>
                            </recordList>
                        </scrollBox>
                    </rectangle>
                </flowPart>
            </flowLayout>
        </flowLayout>
    </scrollBox>
</form>