<?xml version="1.0" encoding="UTF-8"?>
<form name="Functions_Roll">
    <script>
        local function getText(magic)
            if     magic == 1 then return sheet.level1
            elseif magic == 2 then return sheet.level2
            elseif magic == 3 then return sheet.level3
            elseif magic == 4 then return sheet.level4
            elseif magic == 5 then return sheet.level5
            elseif magic == 6 then return sheet.level6
            elseif magic == 7 then return sheet.level7
            elseif magic == 8 then return sheet.level8
            else
                return "1: 0/0"
            end
        end
        local function setText(magic, text)
            if     magic == 1 then sheet.level1 = text
            elseif magic == 2 then sheet.level2 = text
            elseif magic == 3 then sheet.level3 = text
            elseif magic == 4 then sheet.level4 = text
            elseif magic == 5 then sheet.level5 = text
            elseif magic == 6 then sheet.level6 = text
            elseif magic == 7 then sheet.level7 = text
            elseif magic == 8 then sheet.level8 = text
            else
                showMessage("Error")
            end
        end
        local function addXP(qnt, magic)
            local text = getText(magic)
            text = split(text, ":")
            local xp = split(text[2], "/")
            if tonumber(xp[2]) > tonumber(xp[1])+qnt then
                setText(magic, text[1].. ": ".. tonumber(xp[1])+qnt .. "/" .. xp[2])
                return
            end
            text[1] = tonumber(text[1])+1
            if text[1] == 7 then
                setText(magic, "6: 100/100")
                return true
            end
            if text[1] == 3 or text[1] == 5 then
                sheet.vigorMax = sheet.vigorMax + 1
            end
            local qnts = {3, 5, 7, 9, 11, 100}
            setText(magic, text[1].. ": 0/" .. qnts[text[1]])
            return true
        end
        local function reduceVigor(qnt)
            if 0 > qnt then
                return
            end
            sheet.vigor = sheet.vigor - qnt
        end
        local function hasVigor(qnt)
            return sheet.vigor >= qnt
        end
        local function getSequencia()
            local node = self.grimorio.selectedNode
            return splitEmojis(node.sequencia)
        end
        local function getLevel(magic)
            local textSig = getText(magic)
            local level = split(textSig, ":")
            return tonumber(level[1])
        end
        local function hasLevel()
            local sequencia = getSequencia()
            for i=1, #sequencia, 1 do
                if #sequencia > getLevel(icons[sequencia[i]]) then
                    return false
                end
            end
            return true
        end
        local function discountVigor(size, result)
            for i=1, size, 1 do
                local value = 12*size - (i-1)*2
                if result > value then
                    return size-(i-1)
                end
            end
            return 0
        end
        local function afterRoll(rolagem)
            local sequencia = getSequencia()
            local qnt = #sequencia
            local discount = discountVigor(qnt, rolagem.resultado)
            reduceVigor(qnt-discount)
            local index = 1
            for i=1, #rolagem.ops, 1 do
                if rolagem.ops[i].tipo == "dado" then
                    local item = rolagem.ops[i]
                    if item.resultados[1] == item.face then
                        local flag = addXP(1, icons[sequencia[index]])
                        if flag then
                            return
                        end
                    end
                    index = index + 1
                end
            end
        end
        local function valuesRolls(ops)
            local results = ""
            local value = 0
            for i=1, #ops, 1 do
                if ops[i].tipo == "dado" then
                    if i ~= 1 then
                        results = results .. ", "
                    end
                    for j=1, #ops[i].resultados, 1 do
                        local item = ops[i].resultados[j]
                        results = results .. round(item)
                        if item > 10 then
                            results = results .. "(10)"
                            value = value + 10
                        else
                            value = value + item
                        end
                    end
                end
            end
            return results, value
        end
        local function calUnidades(value, sum)
            return math.floor(value*(1+(sum/10))+0.2)
        end
        local function generateUnidades(txtUnits, sum)
            if txtUnits == nil then
                return "Nenhuma unidade."
            end
            local allUnits = split(txtUnits, ",")
            local msg = ""
            for i=1, #allUnits, 1 do
                if i ~= 1 then
                    msg = msg .. ", "
                end
                local parts = split(allUnits[i], "=")
                if #parts == 2 then
                    msg = msg .. trim(parts[1]) .. "(".. trim(parts[2]) ..") = " .. calUnidades(tonumber(parts[2]), sum)
                else
                    msg = msg .. "Unidade " .. i .. "(".. tonumber(parts[1]) .. ") = " .. calUnidades(tonumber(parts[1]), sum)
                end
            end
            return msg
        end
        local function generateMsg(strRolagem)
            local node = self.grimorio.selectedNode
            rolagem = Firecast.interpretarRolagem(strRolagem)
            rolagem:rolarLocalmente()
            local resultsStr, resultInt = valuesRolls(rolagem.ops)
            local dano = node.dano or 0
            local dmg = calUnidades(tonumber(dano), resultInt)
            local msg =   node.sequencia .. ": " .. (node.nomeMagia or "Sem Nome") .. "\n"..
                    "Dados(".. strRolagem .."): ".. resultsStr .. " = " .. rolagem.resultado .. "(".. round(resultInt) ..")" .. "\n" ..
                    "Dano(".. (dano) .."): ".. dmg .."\n" ..
                    "Unidades: " .. generateUnidades(node.unidades, resultInt)
            return msg, rolagem
        end
        local function revealResult(strRolagem)
            local msg, rolagem = generateMsg(strRolagem)
            local mesaDoPersonagem = Firecast.getMesaDe(sheet)
            mesaDoPersonagem.chat:enviarMensagem(msg)
            afterRoll(rolagem)
        end
        local function generateRoll()
            local sequencia = getSequencia()
            local dices = {"1d4", "1d4", "1d6", "1d8", "1d10", "1d12", "1d20"}
            local strRolagem = ""
            for i=1, #sequencia, 1 do
                if i ~= 1 then
                    strRolagem = strRolagem .. "+"
                end
                local level = getLevel(icons[sequencia[i]]) + 1
                strRolagem = strRolagem .. dices[level]
            end
            return strRolagem
        end
        local function roll()
            local strRolagem = generateRoll()
            local node = self.grimorio.selectedNode
            if node.modoSecreto == false or node.modoSecreto == nil then
                revealResult(strRolagem)
            else
                node.rolagem = strRolagem
                local mesaDoPersonagem = Firecast.getMesaDe(sheet)
                mesaDoPersonagem.chat:enviarMensagem("Magia preparada: " .. node.sequencia)
                showMessage("Rolagem preparada.")
            end
        end
        local function level0Roll()
            local strRolagem = generateRoll()
            local msg, rolagem = generateMsg(strRolagem)
            local item = rolagem.ops[1]
            local mesaDoPersonagem = Firecast.getMesaDe(sheet)
            afterRoll(rolagem)
            if item.resultados[1] == item.face then
                mesaDoPersonagem.chat:enviarMensagem(msg)
                return
            end
            mesaDoPersonagem.chat:enviarMensagem("Magia falhou. Resultado: " .. item.resultados[1])
        end
        local function trySpell()
            local sequencia = getSequencia()
            local qnt = #sequencia
            if hasVigor(qnt) == false then
                showMessage("Vigor não suficiente para executar a magia.")
                return
            end
            if qnt == 1 and getLevel(icons[sequencia[1]]) == 0 then
                level0Roll()
                return
            end
            if hasLevel() == false then
                showMessage("Você não possui level nos Signos necessário para executar a magia.")
                return
            end
            roll()
        end
    </script>
</form>